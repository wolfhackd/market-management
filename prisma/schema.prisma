generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vendas {
  id_venda         String  @id @default(uuid())
  // data_venda       DateTime @default(now())
  data_venda       String
  valor_total      Float
  forma_pagamento  String
  status_pagamento String
  observacoes      String?

  // Relacionamentos
  id_cliente String
  cliente    Clientes @relation(fields: [id_cliente], references: [id_cliente])

  id_operador String
  Operador    Operador @relation(fields: [id_operador], references: [id_operador])

  itens              ItensVenda[] // <- vÃ¡rios itens por venda
  Produtos           Produtos?    @relation(fields: [produtosId_produto], references: [id_produto])
  produtosId_produto String?
}

//Usado para controle de vendas do produto
model ItensVenda {
  id_item        String @id @default(uuid())
  quantidade     Int
  preco_unitario Float
  subtotal       Float // quantidade * preco_unitario

  // Relacionamentos
  id_venda String
  venda    Vendas @relation(fields: [id_venda], references: [id_venda])

  id_produto         String
  produto            Produtos  @relation(fields: [id_produto], references: [id_produto])
  Clientes           Clientes? @relation(fields: [clientesId_cliente], references: [id_cliente])
  clientesId_cliente String?
}

model Despesas {
  id_despesa       String @id @default(uuid())
  data_despesa     String
  categoria        String
  descricao        String
  valor            Float
  forma_pagamento  String
  status_pagamento String
  comprovante      String
  // criado_em        DateTime @default(now())
  criado_em        String

  //Relacionamento
  categorias Categorias @relation(fields: [categoria], references: [nome])
  // id_fornecedor
}

model Clientes {
  id_cliente String @id @default(uuid())
  nome       String
  cpf_cnpj   String @unique
  telefone   String
  email      String @unique
  endereco   String
  status     String
  // criado_em  DateTime @default(now())
  criado_em  String

  //Relacionamento
  itens  ItensVenda[]
  Vendas Vendas[]
}

//Usado para controle de produtos
model Produtos {
  id_produto  String @id @default(uuid())
  nome        String
  categoria   String
  preco_venda Float
  codigo      Int    @unique @default(autoincrement())
  status      String
  estoque     Int    @default(0)
  // criado_em   DateTime @default(now())
  criado_em   String

  //Relacionamento
  vendas     Vendas[]
  ItensVenda ItensVenda[]
}

model Operador {
  id_operador String   @id @default(uuid())
  nome        String
  status      String
  vendas      Vendas[]
}

model Categorias {
  id_categoria String     @id @default(uuid())
  nome         String     @unique
  Despesas     Despesas[]
}
